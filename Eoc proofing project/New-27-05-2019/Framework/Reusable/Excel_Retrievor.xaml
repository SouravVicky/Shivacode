<Activity mc:Ignorable="sap sap2010" x:Class="Excel_Retrivor" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:t="clr-namespace:TransposeDataTable;assembly=TransposeDataTable" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_var_name" Type="InArgument(x:String)" />
    <x:Property Name="Out_value" Type="OutArgument(x:String)" />
    <x:Property Name="In_dataDictionary" Type="InArgument(scg:Dictionary(x:String, sd:DataTable))" />
    <x:Property Name="In_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>912,4772</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.PDF</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="872,4692" sap2010:WorkflowViewState.IdRef="Sequence_10">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="mapping_dt" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <TryCatch DisplayName="Try Catch" sap:VirtualizedContainerService.HintSize="850,4568" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <TryCatch.Try>
        <Sequence DisplayName="Excel_Retrievor" sap:VirtualizedContainerService.HintSize="832,4341" sap2010:WorkflowViewState.IdRef="Sequence_1">
          <Sequence.Variables>
            <Variable x:TypeArguments="s:String[]" Name="var_split" />
            <Variable x:TypeArguments="x:String" Name="col_name" />
            <Variable x:TypeArguments="x:String" Name="var_name_split" />
            <Variable x:TypeArguments="sd:DataTable" Name="find_dt" />
            <Variable x:TypeArguments="x:Int32" Name="col_index" />
            <Variable x:TypeArguments="x:String" Name="tempVal" />
            <Variable x:TypeArguments="sd:DataRow[]" Name="dataRows" />
            <Variable x:TypeArguments="x:Int32" Name="hcode_index" />
            <Variable x:TypeArguments="x:Int32" Name="year_index" />
            <Variable x:TypeArguments="sd:DataTable" Name="transposed_find_dt" />
            <Variable x:TypeArguments="ui:GenericValue" Name="copay_cat" />
            <Variable x:TypeArguments="x:Int32" Name="copay_cat_index" />
            <Variable x:TypeArguments="x:String" Name="state" />
            <Variable x:TypeArguments="x:Int32" Name="state_index" />
            <Variable x:TypeArguments="x:String" Name="In_state_filter" />
            <Variable x:TypeArguments="x:String" Name="In_copay_cat" />
            <Variable x:TypeArguments="x:String" Name="In_state_code_filter" />
            <Variable x:TypeArguments="x:String" Name="In_hcode_filter" />
            <Variable x:TypeArguments="x:String" Name="year" />
            <Variable x:TypeArguments="x:String" Name="In_year_filter" />
            <Variable x:TypeArguments="x:Boolean" Name="is_copayment" />
          </Sequence.Variables>
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:LogMessage DisplayName="Log " sap:VirtualizedContainerService.HintSize="810,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Excel Retrievor process start at: &quot;+DateTime.Now.ToString]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <If Condition="[In_var_name.Contains(&quot;co-payment&quot;)]" sap:VirtualizedContainerService.HintSize="810,583" sap2010:WorkflowViewState.IdRef="If_3">
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="358,435" sap2010:WorkflowViewState.IdRef="Sequence_61">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence sap:VirtualizedContainerService.HintSize="336,311" sap2010:WorkflowViewState.IdRef="Sequence_60">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ContinueOnError="{x:Null}" DisplayName="Invoke Workflow File" sap:VirtualizedContainerService.HintSize="314,87" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Reusable\copayment.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="x:String" x:Key="Invar">[In_var_name]</InArgument>
                      <OutArgument x:TypeArguments="x:String" x:Key="Outvar">[In_var_name]</OutArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                  <Assign sap:VirtualizedContainerService.HintSize="314,60" sap2010:WorkflowViewState.IdRef="Assign_69">
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Boolean">[is_copayment]</OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Sequence>
            </If.Then>
            <If.Else>
              <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_70">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Boolean">[is_copayment]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                </Assign.Value>
              </Assign>
            </If.Else>
          </If>
          <Assign sap:VirtualizedContainerService.HintSize="810,60" sap2010:WorkflowViewState.IdRef="Assign_58">
            <Assign.To>
              <OutArgument x:TypeArguments="sd:DataTable">[mapping_dt]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="sd:DataTable">[CType(In_Config("mappingdt"),DataTable)]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="810,60" sap2010:WorkflowViewState.IdRef="Assign_59">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_state_filter]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[In_Config("In_state_filter").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="810,60" sap2010:WorkflowViewState.IdRef="Assign_63">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_copay_cat]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[In_Config("In_copay_cat").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="810,60" sap2010:WorkflowViewState.IdRef="Assign_64">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_state_code_filter]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[In_Config("In_state_code_filter").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="810,60" sap2010:WorkflowViewState.IdRef="Assign_65">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_hcode_filter]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[In_Config("hcode").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="810,60" sap2010:WorkflowViewState.IdRef="Assign_66">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[In_year_filter]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[In_Config("planyear").ToString]</InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap:VirtualizedContainerService.HintSize="810,60" sap2010:WorkflowViewState.IdRef="Assign_2">
            <Assign.To>
              <OutArgument x:TypeArguments="s:String[]">[var_split]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="s:String[]">[Split(In_var_name,"_")]</InArgument>
            </Assign.Value>
          </Assign>
          <If Condition="[In_dataDictionary.ContainsKey(var_split(var_split.Length-2).ToString.Trim) = True]" sap:VirtualizedContainerService.HintSize="810,432" sap2010:WorkflowViewState.IdRef="If_1">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="264,284" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[col_name]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[var_split(var_split.Length-1)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[var_name_split]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[var_split(var_split.Length-2)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap:VirtualizedContainerService.HintSize="264,284" sap2010:WorkflowViewState.IdRef="Sequence_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_7">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[col_name]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[var_split(var_split.Length-2)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[var_name_split]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[var_split(var_split.Length-1)]</InArgument>
                  </Assign.Value>
                </Assign>
              </Sequence>
            </If.Else>
          </If>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="810,61" sap2010:WorkflowViewState.IdRef="WriteLine_8" Text="[&quot;values col_name = &quot;+col_name+&quot; &amp;var_name_split=&quot;+var_name_split]" />
          <If Condition="[NOT (String.IsNullOrEmpty(col_name)) and  NOT (String.IsNullOrEmpty(var_name_split)) and In_dataDictionary.ContainsKey(var_name_split.ToString.Trim) = True]" sap:VirtualizedContainerService.HintSize="810,1710" sap2010:WorkflowViewState.IdRef="If_2">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="685,1562" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <Sequence.Variables>
                  <Variable x:TypeArguments="x:String" Name="hcode" />
                </Sequence.Variables>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Assign sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_9">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataTable">[find_dt]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataTable">[In_dataDictionary.Item(var_name_split)]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Find Hcode index" sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_12">
                  <Assign.To>
                    <OutArgument x:TypeArguments="sd:DataRow[]">[dataRows]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="sd:DataRow[]">[mapping_dt.Select("[VARIABLE] ='"+var_name_split+"'")]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Find Hcode index" sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[hcode]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dataRows(0).Item("Hcode").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="663,61" sap2010:WorkflowViewState.IdRef="WriteLine_10" Text="[&quot;hcode =&quot;+hcode]" />
                <Assign DisplayName="Find Hcode index" sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[year]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dataRows(0).Item("Year").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Find Hcode index" sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_27">
                  <Assign.To>
                    <OutArgument x:TypeArguments="ui:GenericValue">[copay_cat]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="ui:GenericValue">[dataRows(0).Item("Copay_Cat").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <Assign DisplayName="Find Hcode index" sap:VirtualizedContainerService.HintSize="663,60" sap2010:WorkflowViewState.IdRef="Assign_28">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">[state]</OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">[dataRows(0).Item("State").ToString]</InArgument>
                  </Assign.Value>
                </Assign>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="663,61" sap2010:WorkflowViewState.IdRef="WriteLine_11" Text="[&quot;year =&quot;+year]" />
                <Flowchart sap:VirtualizedContainerService.HintSize="663,636" sap2010:WorkflowViewState.IdRef="Flowchart_1">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                      <av:Point x:Key="ShapeLocation">290,2.5</av:Point>
                      <av:Size x:Key="ShapeSize">60,75</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">320,77.5 320,176.5</av:PointCollection>
                      <x:Double x:Key="Width">649</x:Double>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Flowchart.StartNode>
                    <x:Reference>__ReferenceID7</x:Reference>
                  </Flowchart.StartNode>
                  <FlowSwitch x:TypeArguments="x:String" x:Name="__ReferenceID7" DisplayName="Flow Switch" Expression="[var_name_split.ToUpper]" sap:VirtualizedContainerService.HintSize="70,87" sap2010:WorkflowViewState.IdRef="FlowSwitch`1_1">
                    <FlowSwitch.Default>
                      <FlowStep x:Name="__ReferenceID1">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <av:Point x:Key="ShapeLocation">10,64</av:Point>
                            <av:Size x:Key="ShapeSize">200,51</av:Size>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="SOT" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_36">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <t:TransposeDataTable DisplayName="Transpose data table" sap:VirtualizedContainerService.HintSize="242,22" sap2010:WorkflowViewState.IdRef="TransposeDataTable_4" Outtable="[transposed_find_dt]" Transposedatatable="[find_dt]" />
                          <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_38">
                            <Assign.To>
                              <OutArgument x:TypeArguments="sd:DataRow[]">[dataRows]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="sd:DataRow[]">[transposed_find_dt.Select("["+hcode.Trim+"] ='"+In_hcode_filter.Trim+"' and ["+year.Trim+"] ='"+In_year_filter.Trim+"'")]</InArgument>
                            </Assign.Value>
                          </Assign>
                          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_24" Text="[dataRows.Count.ToString]" />
                          <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_39">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[dataRows(0).Item(col_name).ToString]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </FlowStep>
                    </FlowSwitch.Default>
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <av:Point x:Key="ShapeLocation">285,176.5</av:Point>
                        <av:Size x:Key="ShapeSize">70,87</av:Size>
                        <av:PointCollection x:Key="Default">302.5,176.5 302.5,90 210,90</av:PointCollection>
                        <x:String x:Key="DefaultCaseDisplayName">SOT</x:String>
                        <av:PointCollection x:Key="PARTDConnector">337.5,176.5 337.5,90 440,90</av:PointCollection>
                        <av:PointCollection x:Key="TRACKConnector">285,198.25 255,198.25 255,170 210,170</av:PointCollection>
                        <av:PointCollection x:Key="CSConnector">285,220 110,220 110,244</av:PointCollection>
                        <av:PointCollection x:Key="LEGALConnector">302.5,263.5 302.5,316 110,316 110,346</av:PointCollection>
                        <av:PointCollection x:Key="CONTACTLANGConnector">355,198.25 385,198.25 385,150 440,150</av:PointCollection>
                        <av:PointCollection x:Key="SHIPConnector">355,220 640,220 640,310 610,310</av:PointCollection>
                        <av:PointCollection x:Key="QIOConnector">355,220 510,220 510,284</av:PointCollection>
                        <av:PointCollection x:Key="CONTSPAPConnector">355,241.75 510,241.75 510,284</av:PointCollection>
                        <av:PointCollection x:Key="ADAPConnector">337.5,263.5 337.5,310 410,310</av:PointCollection>
                        <av:PointCollection x:Key="MCAIDConnector">320,263.5 320,366 510,366 510,336</av:PointCollection>
                        <av:PointCollection x:Key="DOHConnector">302.5,263.5 302.5,391.328466276607 510,391.328466276607 510,336</av:PointCollection>
                        <av:PointCollection x:Key="OMBConnector">337.5,263.5 337.5,284 380,284 380,254 510,254 510,284</av:PointCollection>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <FlowStep x:Key="PARTD" x:Name="__ReferenceID2">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">440,64</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="PARTD" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_40">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="sd:DataRowCollection" Name="dataRowsCollection" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="find hcode to hcode_index" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_37">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_21">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[hcode]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[hcode_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find copay_cat to copay_cat_index" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_38">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_22">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[copay_cat]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[copay_cat_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find col_name to col_index" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_39">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_23">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[col_name]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[col_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_40">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRowCollection">[dataRowsCollection]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRowCollection">[(From rw In find_dt Where rw("Column"+(hcode_index - 1 ).ToString+"").tostring = ""+In_hcode_filter.Trim+"" And rw("Column"+(copay_cat_index - 1 ).ToString+"").tostring = ""+In_copay_cat+"").copyToDataTable().Rows]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_41">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dataRowsCollection.Item(0)(col_index-1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </FlowStep>
                    <FlowStep x:Key="TRACK" x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">10,144</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="TRACK" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_43">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="find hcode to hcode_index" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_41">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_24">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[hcode]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[hcode_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="WriteLine_26" Text="[&quot;TRACK : &quot;+hcode_index.ToString]" />
                        <Sequence DisplayName="find col_name to col_index" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_42">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_25">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[col_name]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[col_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="WriteLine_27" Text="[&quot;TRACK : &quot;+col_index.ToString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_42">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow[]">[dataRows]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow[]">[find_dt.Select("[Column"+(hcode_index-1).ToString+"] ='"+In_hcode_filter+"'")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="WriteLine_28" Text="[&quot;TRACK : &quot;+dataRows.Count.ToString]" />
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_43">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dataRows(0).Item(col_index-1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </FlowStep>
                    <FlowStep x:Key="CS" x:Name="__ReferenceID4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">10,244</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="CS" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_47">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="In_hode_filter_substring" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="find hcode to hcodeindex" sap:VirtualizedContainerService.HintSize="336,52" sap2010:WorkflowViewState.IdRef="Sequence_44">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_26">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[hcode]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[hcode_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find state to state_index" sap:VirtualizedContainerService.HintSize="336,288" sap2010:WorkflowViewState.IdRef="Sequence_45">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_27">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[state]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[state_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find col_name to col_index" sap:VirtualizedContainerService.HintSize="336,52" sap2010:WorkflowViewState.IdRef="Sequence_46">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_28">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[col_name]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[col_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_44">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[In_hode_filter_substring]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[In_hcode_filter.Substring(0,5)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_45">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow[]">[dataRows]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow[]">[find_dt.Select("[Column"+(hcode_index - 1).ToString+"] ='"+In_hode_filter_substring.Trim+"' and [Column"+(state_index-1).ToString+"] ='"+In_state_filter+"'")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="336,62" sap2010:WorkflowViewState.IdRef="WriteLine_29" Text="[&quot;[Column&quot;+(hcode_index - 1).ToString+&quot;] ='&quot;+In_hode_filter_substring.Trim+&quot;' and [Column&quot;+(state_index-1).ToString+&quot;] ='&quot;+In_state_filter]" />
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_46">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dataRows(0).Item(col_index-1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </FlowStep>
                    <FlowStep x:Key="SHIP" x:Name="__ReferenceID0">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">410,284</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="SHIP,QIO,CONTSPAP,ADAP,DOH,MCAID,OMB" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_54">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="find state to state_index" sap:VirtualizedContainerService.HintSize="336,288" sap2010:WorkflowViewState.IdRef="Sequence_52">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_32">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[state]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[state_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find col_name to col_index" sap:VirtualizedContainerService.HintSize="336,52" sap2010:WorkflowViewState.IdRef="Sequence_53">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_33">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[col_name]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[col_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="336,62" sap2010:WorkflowViewState.IdRef="WriteLine_33" Text="[&quot;[Column&quot;+(state_index-1).ToString+&quot;] ='&quot;+In_state_filter+&quot;'&quot;]" />
                        <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_53">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow[]">[dataRows]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow[]">[find_dt.Select("[Column"+(state_index-1).ToString+"] ='"+In_state_filter+"'")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_54">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dataRows(0).Item(col_index-1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </FlowStep>
                    <x:Reference>__ReferenceID0<x:Key>QIO</x:Key></x:Reference>
                    <x:Reference>__ReferenceID0<x:Key>CONTSPAP</x:Key></x:Reference>
                    <x:Reference>__ReferenceID0<x:Key>ADAP</x:Key></x:Reference>
                    <x:Reference>__ReferenceID0<x:Key>DOH</x:Key></x:Reference>
                    <x:Reference>__ReferenceID0<x:Key>MCAID</x:Key></x:Reference>
                    <x:Reference>__ReferenceID0<x:Key>OMB</x:Key></x:Reference>
                    <FlowStep x:Key="LEGAL" x:Name="__ReferenceID6">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">10,346</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="LEGAL" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_58">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="In_hode_filter_substring" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="find hcode to hcodeindex" sap:VirtualizedContainerService.HintSize="336,52" sap2010:WorkflowViewState.IdRef="Sequence_55">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_34">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[hcode]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[hcode_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find state to state_index" sap:VirtualizedContainerService.HintSize="336,288" sap2010:WorkflowViewState.IdRef="Sequence_56">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_35">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[state]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[state_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find col_name to col_index" sap:VirtualizedContainerService.HintSize="336,52" sap2010:WorkflowViewState.IdRef="Sequence_57">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_36">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[col_name]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[col_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_55">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[In_hode_filter_substring]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[In_hcode_filter.Substring(0,5)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_56">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow[]">[dataRows]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow[]">[find_dt.Select("[Column"+(hcode_index - 1).ToString+"] ='"+In_hode_filter_substring.Trim+"' and [Column"+(state_index-1).ToString+"] ='"+In_state_code_filter+"'")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="336,62" sap2010:WorkflowViewState.IdRef="WriteLine_34" Text="[&quot;[Column&quot;+(hcode_index - 1).ToString+&quot;] ='&quot;+In_hode_filter_substring.Trim+&quot;' and [Column&quot;+(state_index-1).ToString+&quot;] ='&quot;+In_state_code_filter]" />
                        <Assign sap:VirtualizedContainerService.HintSize="336,60" sap2010:WorkflowViewState.IdRef="Assign_57">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dataRows(0).Item(col_index-1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </FlowStep>
                    <FlowStep x:Key="CONTACTLANG" x:Name="__ReferenceID5">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">440,124</av:Point>
                          <av:Size x:Key="ShapeSize">200,51</av:Size>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="CONTACTLANG" sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_51">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:String" Name="In_hode_filter_substring" />
                          <Variable x:TypeArguments="x:String" Name="In_hode_filter_substring_1" />
                          <Variable x:TypeArguments="x:String" Name="In_hode_filter_substring_2" />
                        </Sequence.Variables>
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                            <x:Boolean x:Key="IsPinned">False</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <Sequence DisplayName="find hcode to hcodeindex" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_48">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_29">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[hcode]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[hcode_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find state to state_index" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_49">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_30">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[state]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[state_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Sequence DisplayName="find col_name to col_index" sap:VirtualizedContainerService.HintSize="242,52" sap2010:WorkflowViewState.IdRef="Sequence_50">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                              <x:Boolean x:Key="IsPinned">False</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim result As Integer = 0&#xA;Dim a As Integer = 0&#xA;&#xA;    For a = 0 To In_col_name.Length-1&#xA;          Console.WriteLine(&quot;value of a: {0}&quot;, a)&#xA;&#x9;&#x9;   result *= 26&#xA;&#x9;&#x9;   Dim letter As Char = In_col_name(a)&#xA;&#x9;&#x9; If letter &lt; &quot;A&quot;C &#xA;&#x9;&#x9;&#x9;  letter = &quot;A&quot;C&#xA;&#x9;&#x9;  End If&#xA;        If letter &gt; &quot;Z&quot;C &#xA;&#x9;&#x9;&#x9;letter = &quot;Z&quot;C&#xA;&#x9;&#x9;End If         &#xA;        result += Asc(letter) - Asc(&quot;A&quot;C) + 1&#xA;&#x9;&#x9;&#xA;      Next&#xA;&#x9;  Out_col_index = result&#xA;    " DisplayName="Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_31">
                            <ui:InvokeCode.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="In_col_name">[col_name]</InArgument>
                              <OutArgument x:TypeArguments="x:Int32" x:Key="Out_col_index">[col_index]</OutArgument>
                            </ui:InvokeCode.Arguments>
                          </ui:InvokeCode>
                        </Sequence>
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_47">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[In_hode_filter_substring]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[In_hcode_filter.Substring(0,5)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="WriteLine_30" Text="[In_hode_filter_substring]" />
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_48">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[In_hode_filter_substring_1]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[In_hcode_filter.Substring(5,3)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="WriteLine_31" Text="[In_hode_filter_substring_1]" />
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_49">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[In_hode_filter_substring_2]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[In_hcode_filter.Substring(In_hcode_filter.length() - 3)]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_50">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[In_hode_filter_substring]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[In_hode_filter_substring+"-"+In_hode_filter_substring_1+"-"+In_hode_filter_substring_2.ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_51">
                          <Assign.To>
                            <OutArgument x:TypeArguments="sd:DataRow[]">[dataRows]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="sd:DataRow[]">[find_dt.Select("[Column"+(hcode_index - 1).ToString+"] ='"+In_hode_filter_substring.Trim+"' and [Column"+(state_index-1).ToString+"] ='"+In_state_code_filter+"'")]</InArgument>
                          </Assign.Value>
                        </Assign>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,62" sap2010:WorkflowViewState.IdRef="WriteLine_32" Text="[&quot;[Column&quot;+(hcode_index - 1).ToString+&quot;] ='&quot;+In_hode_filter_substring.Trim+&quot;' and [Column&quot;+(state_index-1).ToString+&quot;] ='&quot;+In_state_code_filter+&quot;'&quot;]" />
                        <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_52">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:String">[dataRows(0).Item(col_index-1).ToString]</InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </FlowStep>
                  </FlowSwitch>
                  <x:Reference>__ReferenceID1</x:Reference>
                  <x:Reference>__ReferenceID2</x:Reference>
                  <x:Reference>__ReferenceID3</x:Reference>
                  <x:Reference>__ReferenceID4</x:Reference>
                  <x:Reference>__ReferenceID5</x:Reference>
                  <x:Reference>__ReferenceID0</x:Reference>
                  <x:Reference>__ReferenceID6</x:Reference>
                </Flowchart>
              </Sequence>
            </If.Then>
          </If>
          <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="810,61" sap2010:WorkflowViewState.IdRef="WriteLine_7" Text="[&quot;Out_Value :- &quot;+Out_value]" />
          <If Condition="[is_copayment]" sap:VirtualizedContainerService.HintSize="810,208" sap2010:WorkflowViewState.IdRef="If_5">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="200,51" sap2010:WorkflowViewState.IdRef="Sequence_59">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If Condition="[Out_value.Contains(&quot;%&quot;)]" sap:VirtualizedContainerService.HintSize="553,433" sap2010:WorkflowViewState.IdRef="If_4">
                  <If.Then>
                    <Sequence sap:VirtualizedContainerService.HintSize="264,285" sap2010:WorkflowViewState.IdRef="Sequence_62">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_67">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Out_value+" of the cost"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_35" Text="[Out_value]" />
                    </Sequence>
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="264,285" sap2010:WorkflowViewState.IdRef="Sequence_63">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="242,60" sap2010:WorkflowViewState.IdRef="Assign_68">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[Out_value]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Out_value+" co-payment"]</InArgument>
                        </Assign.Value>
                      </Assign>
                      <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="242,61" sap2010:WorkflowViewState.IdRef="WriteLine_36" Text="[Out_value]" />
                    </Sequence>
                  </If.Else>
                </If>
                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="553,61" sap2010:WorkflowViewState.IdRef="WriteLine_37" />
              </Sequence>
            </If.Then>
          </If>
          <ui:LogMessage DisplayName="Log " sap:VirtualizedContainerService.HintSize="810,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Excel Retrievor process end at: &quot;+DateTime.Now.ToString]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
        </Sequence>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="836,21" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">False</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="210,61" sap2010:WorkflowViewState.IdRef="WriteLine_9" Text="[&quot;Excel_Retriver Exception: &quot;+In_var_name+&quot; Not Found&quot; + exception.Message]" />
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
    </TryCatch>
  </Sequence>
</Activity>