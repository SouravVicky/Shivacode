<Activity mc:Ignorable="sap sap2010" x:Class="Main" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="In_InputDT" Type="InArgument(sd:DataTable)" />
    <x:Property Name="In_WordDocPath" Type="InArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>376,1213</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>ActivityBuilder_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>Microsoft.Office.Interop.Word</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>UiPath.Word</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.Runtime.WindowsRuntime</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap:VirtualizedContainerService.HintSize="336,1133" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dtKeyValuePair" />
      <Variable x:TypeArguments="sd:DataTable" Default="[New DataTable]" Name="OutDataTable" />
      <Variable x:TypeArguments="x:String" Name="strValue" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log App " sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Info" Message="[&quot;Doc Updation process start at: &quot;+DateTime.Now.ToString]" />
    <ui:CommentOut DisplayName="Comment Out" sap:VirtualizedContainerService.HintSize="314,51" sap2010:WorkflowViewState.IdRef="CommentOut_1">
      <ui:CommentOut.Body>
        <Sequence DisplayName="Ignored Activities" sap:VirtualizedContainerService.HintSize="336,183" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:BuildDataTable DataTable="[dtKeyValuePair]" DisplayName="InplutDataTable for invoke Code-Build Data Table" sap:VirtualizedContainerService.HintSize="314,59" sap2010:WorkflowViewState.IdRef="BuildDataTable_1" TableInfo="&lt;NewDataSet&gt;&#xA;  &lt;xs:schema id=&quot;NewDataSet&quot; xmlns=&quot;&quot; xmlns:xs=&quot;http://www.w3.org/2001/XMLSchema&quot; xmlns:msdata=&quot;urn:schemas-microsoft-com:xml-msdata&quot;&gt;&#xA;    &lt;xs:element name=&quot;NewDataSet&quot; msdata:IsDataSet=&quot;true&quot; msdata:MainDataTable=&quot;TableName&quot; msdata:UseCurrentLocale=&quot;true&quot;&gt;&#xA;      &lt;xs:complexType&gt;&#xA;        &lt;xs:choice minOccurs=&quot;0&quot; maxOccurs=&quot;unbounded&quot;&gt;&#xA;          &lt;xs:element name=&quot;TableName&quot;&gt;&#xA;            &lt;xs:complexType&gt;&#xA;              &lt;xs:sequence&gt;&#xA;                &lt;xs:element name=&quot;FindText&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;                &lt;xs:element name=&quot;ReplaceText&quot; type=&quot;xs:string&quot; minOccurs=&quot;0&quot; /&gt;&#xA;              &lt;/xs:sequence&gt;&#xA;            &lt;/xs:complexType&gt;&#xA;          &lt;/xs:element&gt;&#xA;        &lt;/xs:choice&gt;&#xA;      &lt;/xs:complexType&gt;&#xA;    &lt;/xs:element&gt;&#xA;  &lt;/xs:schema&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;FindText&gt;{G_PARTD}&lt;/FindText&gt;&#xA;    &lt;ReplaceText&gt;Value1&lt;/ReplaceText&gt;&#xA;  &lt;/TableName&gt;&#xA;  &lt;TableName&gt;&#xA;    &lt;FindText&gt;{TRACK_O} &lt;/FindText&gt;&#xA;    &lt;ReplaceText&gt;Value2&lt;/ReplaceText&gt;&#xA;  &lt;/TableName&gt;&#xA;&lt;/NewDataSet&gt;" />
        </Sequence>
      </ui:CommentOut.Body>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:CommentOut>
    <ui:Comment sap:VirtualizedContainerService.HintSize="314,134" sap2010:WorkflowViewState.IdRef="Comment_1" Text="// This Invoke code take input&#xA;1- Input Word file full path with file name&#xA;2- Input Datatable with &quot;FindText&quot; and &quot;ReplaceText&quot; Paramater&#xA;3- OutDataTable with column name VariableName,     ReplaceText,Status,DateTime&#xA;&#xA;" />
    <ui:InvokeCode ContinueOnError="{x:Null}" Code="Dim fileName As Object&#xD;&#xA;Dim OutputFileName As String&#xD;&#xA;Dim _blnResult As Boolean &#xD;&#xA;&#xD;&#xA;Dim _OutDataTable As New System.Data.DataTable&#xD;&#xA;_OutDataTable.Columns.Add(&quot;VariableName&quot;, GetType(String))&#xD;&#xA;_OutDataTable.Columns.Add(&quot;ReplaceText&quot;, GetType(String))&#xD;&#xA;_OutDataTable.Columns.Add(&quot;Status&quot;, GetType(String))&#xD;&#xA;_OutDataTable.Columns.Add(&quot;DateTime&quot;, GetType(String))&#xD;&#xA;_OutDataTable.Columns.Add(&quot;Comments&quot;, GetType(String))&#xD;&#xA;fileName =argInFilePath&#xD;&#xA;Dim wrapFind As  Microsoft.Office.Interop.Word.WdFindWrap = Microsoft.Office.Interop.Word.WdFindWrap.wdFindStop&#xD;&#xA;'Object wrapExecute = Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll;&#xD;&#xA;Dim wordApp As Microsoft.Office.Interop.Word.Application &#xD;&#xA;Dim AdOC As Microsoft.Office.Interop.Word.Document&#xD;&#xA;Dim fnd As Microsoft.Office.Interop.Word.Find&#xD;&#xA;&#xD;&#xA;wordApp = New Microsoft.Office.Interop.Word.Application&#xD;&#xA;aDoc = wordApp.Documents.Open(fileName)&#xD;&#xA;&#xD;&#xA;aDoc.Activate()&#xD;&#xA;Dim dtInPutDataTable As System.Data.DataTable&#xD;&#xA;dtInPutDataTable=argInDT&#xD;&#xA;&#xD;&#xA;Try&#xD;&#xA;For Each row As DataRow In dtInPutDataTable.Rows&#xD;&#xA;&#x9;_blnResult=True&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;Dim FindText As String = row.Item(&quot;FindText&quot;).ToString()&#xD;&#xA;&#x9;console.WriteLine(FindText)&#xD;&#xA;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;Dim ReplaceText As String = Convert.ToString(row.Item(&quot;ReplaceText&quot;))&#xD;&#xA;&#x9;&#x9;&#x9;console.WriteLine(ReplaceText)&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;If(ReplaceText.Length &gt; 250) Then&#xD;&#xA;&#x9;&#x9;&#x9;ReplaceText = ReplaceText.ToString().Substring(0, 200)&#xD;&#xA;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;If(FindText.Length &gt; 250) Then&#xD;&#xA;&#x9;&#x9;&#x9;FindText = FindText.ToString().Substring(0, 200)&#xD;&#xA;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;If(FindText&lt;&gt;String.Empty And ReplaceText&lt;&gt;String.Empty )&#xD;&#xA;&#x9;&#x9;&#x9;Try&#xD;&#xA;&#x9;&#x9;&#x9;'aDOc.Content.Find.ClearFormatting()&#xD;&#xA;&#x9;&#x9;&#x9;'aDOc.Content.Find.Replacement.ClearFormatting()&#xD;&#xA;&#x9;&#x9;&#x9;'aDOc.Content.Find.ClearFormatting()&#xD;&#xA;          ' aDOc.Content.Find.Replacement.ClearFormatting()&#xD;&#xA;            'aDOc.Content.Find.Text = FindText&#xD;&#xA;            ''aDOc.Content.Find.Wrap = wrapFind&#xD;&#xA;           'aDOc.Content.Find.Replacement.Text = ReplaceText&#xD;&#xA;&#x9;&#x9;   &#xD;&#xA;&#x9;&#x9;   &#xD;&#xA;&#x9;&#x9;   &#xD;&#xA;            'aDOc.Content.Find.Execute(Forward:= True, Replace:= Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll)&#xD;&#xA;    &#x9;&#x9;_blnResult=aDoc.Content.Find.Execute(FindText:=FindText.ToString,ReplaceWith:=ReplaceText.Trim,Replace:=Microsoft.Office.Interop.Word.WdReplace.wdReplaceAll)&#xD;&#xA;&#x9;&#x9;&#x9;console.WriteLine(&quot;Find Result: &quot;+_blnResult.ToString)&#xD;&#xA;&#x9;&#x9;&#x9;aDoc.Content.Find.Replacement.Font.ColorIndex=WdColorIndex.wdBlack&#xD;&#xA;&#x9;&#x9;&#x9;'aDOc.Application.Selection.Text = ReplaceText&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;&#x9;If(_blnResult) Then&#xD;&#xA;&#x9;&#x9;&#x9;_OutDataTable.Rows.Add(FindText,ReplaceText,&quot;Success&quot;,System.DateTime.Now.ToString,&quot;&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;Else&#xD;&#xA;&#x9;&#x9;&#x9;&#x9;_OutDataTable.Rows.Add(FindText,ReplaceText,&quot;Failure&quot;,System.DateTime.Now.ToString,&quot;No Replacements Found&quot;)&#xD;&#xA;&#x9;&#x9;&#x9;End If&#xD;&#xA;&#x9;&#x9;&#x9;&#xD;&#xA;&#x9;&#x9;Catch ex As Exception&#xD;&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Inside Catch&quot;+ex.ToString)&#xD;&#xA;    &#x9;&#x9;_OutDataTable.Rows.Add(FindText,ReplaceText,&quot;Failure&quot;,System.DateTime.Now.ToString,ex.Message.ToString+&quot;------&quot;+ex.InnerException.ToString+&quot;------&quot;+ex.Source.ToString)&#xD;&#xA;&#x9;&#x9;&#x9;End Try&#xD;&#xA;&#x9;&#x9;End If&#xD;&#xA;   Next row&#xD;&#xA;   &#xD;&#xA;   Catch ex1 As Exception&#xD;&#xA;&#x9;&#x9;&#x9;Console.WriteLine(&quot;Outer Catch&quot;+ex1.ToString)&#xD;&#xA;  &#x9;End Try&#xD;&#xA;&#x9;&#xD;&#xA;'msgbox(&quot;AA&quot;)&#xD;&#xA;argOutDataTable=_OutDataTable              &#xD;&#xA;aDoc.Save&#xD;&#xA;aDoc.Close&#xD;&#xA;" DisplayName="Replace Text-Invoke Code" sap:VirtualizedContainerService.HintSize="314,164" sap2010:WorkflowViewState.IdRef="InvokeCode_2">
      <ui:InvokeCode.Arguments>
        <InArgument x:TypeArguments="sd:DataTable" x:Key="argInDT">[In_InputDT]</InArgument>
        <InArgument x:TypeArguments="x:String" x:Key="argInFilePath">[In_WordDocPath]</InArgument>
        <OutArgument x:TypeArguments="sd:DataTable" x:Key="argOutDataTable">[OutDataTable]</OutArgument>
      </ui:InvokeCode.Arguments>
    </ui:InvokeCode>
    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="314,61" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="[&quot;Doc Replacement Invoke Code ends at: &quot;+DateTime.Now.ToString]" />
    <ui:KillProcess ContinueOnError="{x:Null}" Process="{x:Null}" DisplayName="CloseAll of the instance of Word-Kill Process" sap:VirtualizedContainerService.HintSize="314,22" sap2010:WorkflowViewState.IdRef="KillProcess_1" ProcessName="WINWORD.EXE" />
    <ui:WriteRange AddHeaders="False" DataTable="[OutDataTable]" DisplayName="Write Range" sap:VirtualizedContainerService.HintSize="314,115" sap2010:WorkflowViewState.IdRef="WriteRange_1" SheetName="Sheet1" StartingCell="A1" WorkbookPath="C:\Users\naman.gupta\Documents\UiPath\WellCare Docs\Status.xlsx" />
    <ui:LogMessage DisplayName="Log App " sap:VirtualizedContainerService.HintSize="314,91" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="Info" Message="[&quot;Doc Updation process end at: &quot;+DateTime.Now.ToString]" />
  </Sequence>
</Activity>